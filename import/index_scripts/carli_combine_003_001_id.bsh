/**
 * Custom call number script.
 *
 * This can be used to override built-in SolrMarc custom functions.  If you change
 * this script, you will need to activate it in import/marc_local.properties before
 * it will be applied during indexing.
 */
import org.marc4j.marc.Record;

// define the base level indexer so that its methods can be called from the script.
// note that the SolrIndexer code will set this value before the script methods are called.
org.solrmarc.index.SolrIndexer indexer = null;

/**
* Extract the call number label from a record
* @param record
* @return Call number label
*/
public String combine_003_001_id(Record record) {
   String id = indexer.getFirstFieldVal(record, "001");
   String org = indexer.getFirstFieldVal(record, "003");
   //return "(" + org + ")" + id;
   return org + "." + id;
}

public Set create_local_ids_str_mv(Record record) {
    // Initialize our return value:
    Set result = new LinkedHashSet();

    // Dummy link (which will cause the deduped record to always display by default)
    result.add("(CARLI)");

    // Loop through the specified MARC fields:
    Set input = indexer.getFieldList(record, "035a");
    Iterator iter = input.iterator();
    while (iter.hasNext()) {
        // Get the current string to work on:
        String current = iter.next();
        String _035a = current.toString();

        // skip non-CARLI data
        if (_035a.indexOf("(OCoLC)") != -1) continue; 

        result.add(_035a);
    }

    // If we found no call numbers, return null; otherwise, return our results:
    if (result.isEmpty())
        return null;

    return result;
}

public Set create_institution(Record record) {
    // Initialize our return value:
    Set result = new LinkedHashSet();

    // Loop through the specified MARC fields:
    Set input = indexer.getFieldList(record, "035a");
    Iterator iter = input.iterator();
    while (iter.hasNext()) {
        // Get the current string to work on:
        String current = iter.next();
        String _035a = current.toString();


        // parse out institution
        int inx1 = -1;
        int inx2 = -1;
        if ((inx1 = _035a.indexOf("(")) >= 0) {
            if ((inx2 = _035a.indexOf(")")) >= 0 && inx2 > inx1) {
                String the035a = _035a.substring(inx1+1, inx2);

                // quick elimination
                if (the035a.length() == 5 && the035a.endsWith("db")) {
                   // keep only CARLI libraries
/**********************************
                   if (
                      the035a.equals("ADLdb") ||
                      the035a.equals("AUGdb") ||
                      the035a.equals("ARUdb") ||
                      the035a.equals("BENdb") ||
                      the035a.equals("BRAdb") ||
                      the035a.equals("CSCdb") ||
                      the035a.equals("CTUdb") ||
                      the035a.equals("CSUdb") ||
                      the035a.equals("CODdb") ||
                      the035a.equals("COLdb") ||
                      the035a.equals("CONdb") ||
                      the035a.equals("DACdb") ||
                      the035a.equals("DPUdb") ||
                      the035a.equals("DOMdb") ||
                      the035a.equals("EIUdb") ||
                      the035a.equals("ELMdb") ||
                      the035a.equals("ERKdb") ||
                      the035a.equals("GSUdb") ||
                      the035a.equals("GRNdb") ||
                      the035a.equals("WRHdb") ||
                      the035a.equals("HCDdb") ||
                      the035a.equals("HRTdb") ||
                      the035a.equals("ICCdb") ||
                      the035a.equals("ILCdb") ||
                      the035a.equals("IECdb") ||
                      the035a.equals("IITdb") ||
                      the035a.equals("IMSdb") ||
                      the035a.equals("ISLdb") ||
                      the035a.equals("ISUdb") ||
                      the035a.equals("IVCdb") ||
                      the035a.equals("IWUdb") ||
                      the035a.equals("JKMdb") ||
                      the035a.equals("JWCdb") ||
                      the035a.equals("JOLdb") ||
                      the035a.equals("JUDdb") ||
                      the035a.equals("KCCdb") ||
                      the035a.equals("KENdb") ||
                      the035a.equals("KISdb") ||
                      the035a.equals("KNXdb") ||
                      the035a.equals("LFCdb") ||
                      the035a.equals("LACdb") ||
                      the035a.equals("LEWdb") ||
                      the035a.equals("LCCdb") ||
                      the035a.equals("LNCdb") ||
                      the035a.equals("LLCdb") ||
                      the035a.equals("MMCdb") ||
                      the035a.equals("MCKdb") ||
                      the035a.equals("MILdb") ||
                      the035a.equals("MONdb") ||
                      the035a.equals("MRTdb") ||
                      the035a.equals("NLUdb") ||
                      the035a.equals("NBYdb") ||
                      the035a.equals("NCCdb") ||
                      the035a.equals("NPUdb") ||
                      the035a.equals("NEIdb") ||
                      the035a.equals("NIUdb") ||
                      the035a.equals("NBTdb") ||
                      the035a.equals("OAKdb") ||
                      the035a.equals("ONUdb") ||
                      the035a.equals("PRKdb") ||
                      the035a.equals("PRCdb") ||
                      the035a.equals("QCYdb") ||
                      the035a.equals("RCCdb") ||
                      the035a.equals("RMCdb") ||
                      the035a.equals("ROUdb") ||
                      the035a.equals("RSHdb") ||
                      the035a.equals("SFMdb") ||
                      the035a.equals("SXUdb") ||
                      the035a.equals("SVCdb") ||
                      the035a.equals("SAIdb") ||
                      the035a.equals("SEIdb") ||
                      the035a.equals("SICdb") ||
                      the035a.equals("SIEdb") ||
                      the035a.equals("SIMdb") ||
                      the035a.equals("SWIdb") ||
                      the035a.equals("TRNdb") ||
                      the035a.equals("TIUdb") ||
                      the035a.equals("TRTdb") ||
                      the035a.equals("UICdb") ||
                      the035a.equals("UISdb") ||
                      the035a.equals("UIUdb") ||
                      the035a.equals("USFdb") ||
                      the035a.equals("SMLdb") ||
                      the035a.equals("WIUdb") ||
                      the035a.equals("WHEdb")
                  ) {
                      result.add(the035a);
                  }
********************************/
               }
            }
        }

    }

    // If we found no call numbers, return null; otherwise, return our results:
    if (result.isEmpty())
        return null;

    return result;
}
