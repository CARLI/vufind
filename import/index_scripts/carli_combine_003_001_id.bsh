/**
 * Custom call number script.
 *
 * This can be used to override built-in SolrMarc custom functions.  If you change
 * this script, you will need to activate it in import/marc_local.properties before
 * it will be applied during indexing.
 */
import org.marc4j.marc.Record;


//import org.apache.log4j.Logger;
//import org.solrmarc.tools.Utils;
//protected static Logger logger = Logger.getLogger(Utils.class.getName());

// define the base level indexer so that its methods can be called from the script.
// note that the SolrIndexer code will set this value before the script methods are called.
org.solrmarc.index.SolrIndexer indexer = null;

/**
* Extract the call number label from a record
* @param record
* @return Call number label
*/
public String combine_003_001_id(Record record) {
   String id = indexer.getFirstFieldVal(record, "001");
   String org = indexer.getFirstFieldVal(record, "003");
   return org + "." + id;
}

public Set create_local_ids_str_mv(Record record) {
    // Initialize our return value:
    Set result = new LinkedHashSet();

    // Dummy link (which will cause the deduped record to always display by default)
    result.add("(CARLI)");

    // Loop through the specified MARC fields:
    Set input = indexer.getFieldList(record, "035a");
    Iterator iter = input.iterator();
    while (iter.hasNext()) {
        // Get the current string to work on:
        String current = iter.next();
        String _035a = current.toString();

        // keep only CARLI libraries
        if (is_carli_library(the035a)) {
            result.add(_035a);
        } 
    }

    // If we found no call numbers, return null; otherwise, return our results:
    if (result.isEmpty())
        return null;

    return result;
}

public Set create_institutions(Record record) {
    // Initialize our return value:
    Set result = new LinkedHashSet();

    // Loop through the specified MARC fields:
    Set input = indexer.getFieldList(record, "035a");
    Iterator iter = input.iterator();
    while (iter.hasNext()) {
        // Get the current string to work on:
        String current = iter.next();
        String _035a = current.toString();


        // parse out institution
        int inx1 = -1;
        int inx2 = -1;
        if ((inx1 = _035a.indexOf("(")) >= 0) {
            if ((inx2 = _035a.indexOf(")")) >= 0 && inx2 > inx1) {
                String the035a = _035a.substring(inx1+1, inx2);

                // keep only CARLI libraries
                if (is_carli_library(the035a)) {
                   //logger.debug("the035a = " + the035a + "\n");
                      result.add(the035a);
               }
            }
        }

    }

    // If we found no call numbers, return null; otherwise, return our results:
    if (result.isEmpty())
        return null;

    return result;
}

public boolean is_carli_library(String inst) {
    if (inst.length() == 5 && inst.endsWith("db")) {
        return true;
    }
    return false;
}
